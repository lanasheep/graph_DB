#!/usr/bin/env python3
import pytest
from syntax_lang_parser import check


def test_statement():
    assert check("KW_CONNECT KW_TO STRING SEMI")
    assert check("NT_NAME OP_EQ SYMB SEMI")
    assert check("KW_LIST SEMI")


def test_forgot_semicolon():
    assert not check("KW_CONNECT KW_TO STRING")
    assert not check("NT_NAME OP_EQ SYMB")
    assert not check("KW_LIST")


def test_select_statement():
    assert check("KW_SELECT KW_COUNT KW_FROM STRING KW_WHERE LBR INT RBR OP_MINUS \
NT_NAME OP_MINUS OP_GR LBR UNDERSCORE RBR SEMI")
    assert check("KW_SELECT KW_EXISTS KW_FROM STRING KW_WHERE LBR INT RBR OP_MINUS NT_NAME OP_MINUS OP_GR LBR INT RBR SEMI")


def test_script():
    assert check("KW_CONNECT KW_TO STRING SEMI NT_NAME OP_EQ SYMB NT_NAME SYMB NT_NAME MID LBR RBR SEMI KW_SELECT \
KW_COUNT KW_FROM STRING KW_WHERE LBR INT RBR OP_MINUS NT_NAME OP_MINUS OP_GR LBR UNDERSCORE RBR SEMI")
    assert check("KW_CONNECT KW_TO STRING SEMI KW_LIST SEMI KW_SELECT KW_GET KW_FROM STRING KW_WHERE \
LBR INT RBR OP_MINUS OP_GR LBR INT RBR SEMI NT_NAME OP_EQ LBR SYMB RBR OP_STAR SEMI")


def test_empty_script():
    assert check("")


def test_composite_patterns():
    assert check("NT_NAME OP_EQ LBR SYMB SYMB RBR OP_STAR MID LBR SYMB NT_NAME SYMB RBR OP_STAR SEMI")
    assert check("NT_NAME OP_EQ SYMB MID SYMB MID NT_NAME NT_NAME MID NT_NAME LBR NT_NAME RBR OP_STAR MID LBR RBR SEMI")
    assert check("KW_SELECT KW_EXISTS KW_FROM STRING KW_WHERE LBR UNDERSCORE RBR OP_MINUS NT_NAME NT_NAME \
MID SYMB MID LBR SYMB SYMB RBR OP_STAR OP_MINUS OP_GR LBR INT RBR SEMI")


def test_mistakes_brackets():
    assert not check("KW_SELECT KW_COUNT KW_FROM STRING KW_WHERE LBR INT RBR OP_MINUS \
NT_NAME OP_MINUS OP_GR LBR UNDERSCORE RBR RBR SEMI")
    assert not check("NT_NAME OP_EQ SYMB MID SYMB MID NT_NAME NT_NAME MID NT_NAME NT_NAME RBR OP_Q MID LBR RBR SEMI")


def test_wrong_syntax():
    assert not check("KW_SELECT KW_GET KW_FROM INT KW_WHERE LBR INT RBR OP_MINUS NT_NAME OP_MINUS OP_GR LBR INT RBR SEMI")
    assert not check("KW_SELECT KW_EXISTS KW_FROM STRING KW_WHERE LBR UNDERSCORE RBR OP_MINUS NT_NAME OP_MINUS OP_GR LBR RBR SEMI")
    assert not check("KW_SELECT KW_EXISTS KW_FROM STRING KW_WHERE LBR UNDERSCORE RBR OP_MINUS OP_MINUS OP_GR LBR RBR SEMI")
